import { CoreSettings } from '@src/CoreSettings';
import { DisplaySettings } from '@src/DisplaySettings';
import { LayoutMode } from '@src/LayoutMode';
import { StaveProfile } from '@src/StaveProfile';
import { ImporterSettings } from '@src/ImporterSettings';
import { FingeringMode, NotationMode, NotationSettings, TabRhythmMode } from '@src/NotationSettings';
import { PlayerSettings, ScrollMode, VibratoPlaybackSettings } from '@src/PlayerSettings';
import { ProgressEventArgs } from '@src/ProgressEventArgs';
import { RenderingResources } from '@src/RenderingResources';
import { ResizeEventArgs } from '@src/ResizeEventArgs';
import { Settings } from '@src/Settings';
import { AlphaTabError, AlphaTabErrorType } from '@src/AlphaTabError';
import { FormatError } from '@src/FormatError';
import { LogLevel } from '@src/LogLevel';
import { Logger } from '@src/Logger';
import { FileLoadError } from '@src/FileLoadError';
import { AlphaTabApi } from '@src/platform/javascript/AlphaTabApi';
export { AlphaTabApi, AlphaTabError, AlphaTabErrorType, FileLoadError, CoreSettings, StaveProfile, LayoutMode, DisplaySettings, FormatError, ImporterSettings, TabRhythmMode, FingeringMode, NotationMode, NotationSettings, ScrollMode, VibratoPlaybackSettings, PlayerSettings, ProgressEventArgs, RenderingResources, ResizeEventArgs, Settings, LogLevel, Logger };
import { VersionInfo } from '@src/generated/VersionInfo';
export declare const meta: typeof VersionInfo;
import { ScoreImporter } from '@src/importer/ScoreImporter';
import { ScoreLoader } from '@src/importer/ScoreLoader';
import { UnsupportedFormatError } from '@src/importer/UnsupportedFormatError';
export declare const importer: {
    ScoreImporter: typeof ScoreImporter;
    ScoreLoader: typeof ScoreLoader;
    UnsupportedFormatError: typeof UnsupportedFormatError;
};
import { ScoreExporter } from '@src/exporter/ScoreExporter';
import { Gp7Exporter } from '@src/exporter/Gp7Exporter';
export declare const exporter: {
    ScoreExporter: typeof ScoreExporter;
    Gp7Exporter: typeof Gp7Exporter;
};
import { BeatTickLookup } from '@src/midi/BeatTickLookup';
import { MasterBarTickLookup } from '@src/midi/MasterBarTickLookup';
import { MidiTickLookup, MidiTickLookupFindBeatResult } from '@src/midi/MidiTickLookup';
import { MidiFile } from '@src/midi/MidiFile';
import { ControllerType } from '@src/midi/ControllerType';
import { MetaDataEvent } from '@src/midi/MetaDataEvent';
import { MetaEvent, MetaEventType } from '@src/midi/MetaEvent';
import { MetaNumberEvent } from '@src/midi/MetaNumberEvent';
import { MidiEvent, MidiEventType } from '@src/midi/MidiEvent';
import { Midi20PerNotePitchBendEvent } from '@src/midi/Midi20PerNotePitchBendEvent';
import { SystemCommonEvent, SystemCommonType } from '@src/midi/SystemCommonEvent';
import { SystemExclusiveEvent } from '@src/midi/SystemExclusiveEvent';
import { MidiFileGenerator } from '@src/midi/MidiFileGenerator';
import { AlphaSynthMidiFileHandler } from '@src/midi/AlphaSynthMidiFileHandler';
export declare const midi: {
    BeatTickLookup: typeof BeatTickLookup;
    MasterBarTickLookup: typeof MasterBarTickLookup;
    MidiTickLookup: typeof MidiTickLookup;
    MidiTickLookupFindBeatResult: typeof MidiTickLookupFindBeatResult;
    MidiFile: typeof MidiFile;
    ControllerType: typeof ControllerType;
    MetaDataEvent: typeof MetaDataEvent;
    MetaEvent: typeof MetaEvent;
    MetaEventType: typeof MetaEventType;
    MetaNumberEvent: typeof MetaNumberEvent;
    MidiEvent: typeof MidiEvent;
    MidiEventType: typeof MidiEventType;
    Midi20PerNotePitchBendEvent: typeof Midi20PerNotePitchBendEvent;
    SystemCommonEvent: typeof SystemCommonEvent;
    SystemCommonType: typeof SystemCommonType;
    SystemExclusiveEvent: typeof SystemExclusiveEvent;
    MidiFileGenerator: typeof MidiFileGenerator;
    AlphaSynthMidiFileHandler: typeof AlphaSynthMidiFileHandler;
};
import { AccentuationType } from '@src/model/AccentuationType';
import { AccidentalType } from '@src/model/AccidentalType';
import { AutomationType, Automation } from '@src/model/Automation';
import { Bar } from '@src/model/Bar';
import { Beat } from '@src/model/Beat';
import { BendPoint } from '@src/model/BendPoint';
import { BendStyle } from '@src/model/BendStyle';
import { BendType } from '@src/model/BendType';
import { BrushType } from '@src/model/BrushType';
import { Chord } from '@src/model/Chord';
import { Clef } from '@src/model/Clef';
import { Color } from '@src/model/Color';
import { CrescendoType } from '@src/model/CrescendoType';
import { Duration } from '@src/model/Duration';
import { DynamicValue } from '@src/model/DynamicValue';
import { FermataType, Fermata } from '@src/model/Fermata';
import { Fingers } from '@src/model/Fingers';
import { FontStyle, Font } from '@src/model/Font';
import { GraceType } from '@src/model/GraceType';
import { HarmonicType } from '@src/model/HarmonicType';
import { InstrumentArticulation } from '@src/model/InstrumentArticulation';
import { JsonConverter } from '@src/model/JsonConverter';
import { KeySignature } from '@src/model/KeySignature';
import { KeySignatureType } from '@src/model/KeySignatureType';
import { Lyrics } from '@src/model/Lyrics';
import { MasterBar } from '@src/model/MasterBar';
import { MusicFontSymbol } from '@src/model/MusicFontSymbol';
import { Note } from '@src/model/Note';
import { NoteAccidentalMode } from '@src/model/NoteAccidentalMode';
import { Ottavia } from '@src/model/Ottavia';
import { PickStroke } from '@src/model/PickStroke';
import { PlaybackInformation } from '@src/model/PlaybackInformation';
import { RenderStylesheet } from '@src/model/RenderStylesheet';
import { RepeatGroup } from '@src/model/RepeatGroup';
import { Score } from '@src/model/Score';
import { Section } from '@src/model/Section';
import { SimileMark } from '@src/model/SimileMark';
import { SlideInType } from '@src/model/SlideInType';
import { SlideOutType } from '@src/model/SlideOutType';
import { Staff } from '@src/model/Staff';
import { Track } from '@src/model/Track';
import { TripletFeel } from '@src/model/TripletFeel';
import { Tuning } from '@src/model/Tuning';
import { TupletGroup } from '@src/model/TupletGroup';
import { VibratoType } from '@src/model/VibratoType';
import { Voice } from '@src/model/Voice';
import { WhammyType } from '@src/model/WhammyType';
export declare const model: {
    AccentuationType: typeof AccentuationType;
    AccidentalType: typeof AccidentalType;
    AutomationType: typeof AutomationType;
    Automation: typeof Automation;
    Bar: typeof Bar;
    Beat: typeof Beat;
    BendPoint: typeof BendPoint;
    BendStyle: typeof BendStyle;
    BendType: typeof BendType;
    BrushType: typeof BrushType;
    Chord: typeof Chord;
    Clef: typeof Clef;
    Color: typeof Color;
    CrescendoType: typeof CrescendoType;
    Duration: typeof Duration;
    DynamicValue: typeof DynamicValue;
    FermataType: typeof FermataType;
    Fermata: typeof Fermata;
    Fingers: typeof Fingers;
    FontStyle: typeof FontStyle;
    Font: typeof Font;
    GraceType: typeof GraceType;
    HarmonicType: typeof HarmonicType;
    InstrumentArticulation: typeof InstrumentArticulation;
    JsonConverter: typeof JsonConverter;
    KeySignature: typeof KeySignature;
    KeySignatureType: typeof KeySignatureType;
    Lyrics: typeof Lyrics;
    MasterBar: typeof MasterBar;
    MusicFontSymbol: typeof MusicFontSymbol;
    Note: typeof Note;
    NoteAccidentalMode: typeof NoteAccidentalMode;
    Ottavia: typeof Ottavia;
    PickStroke: typeof PickStroke;
    PlaybackInformation: typeof PlaybackInformation;
    RenderStylesheet: typeof RenderStylesheet;
    RepeatGroup: typeof RepeatGroup;
    Score: typeof Score;
    Section: typeof Section;
    SimileMark: typeof SimileMark;
    SlideInType: typeof SlideInType;
    SlideOutType: typeof SlideOutType;
    Staff: typeof Staff;
    Track: typeof Track;
    TripletFeel: typeof TripletFeel;
    Tuning: typeof Tuning;
    TupletGroup: typeof TupletGroup;
    VibratoType: typeof VibratoType;
    Voice: typeof Voice;
    WhammyType: typeof WhammyType;
};
import { RenderFinishedEventArgs } from '@src/rendering/RenderFinishedEventArgs';
import { ScoreRenderer } from '@src/rendering/ScoreRenderer';
import { BarBounds } from '@src/rendering/utils/BarBounds';
import { BeatBounds } from '@src/rendering/utils/BeatBounds';
import { Bounds } from '@src/rendering/utils/Bounds';
import { BoundsLookup } from '@src/rendering/utils/BoundsLookup';
import { MasterBarBounds } from '@src/rendering/utils/MasterBarBounds';
import { NoteBounds } from '@src/rendering/utils/NoteBounds';
import { StaveGroupBounds } from '@src/rendering/utils/StaveGroupBounds';
export declare const rendering: {
    ScoreRenderer: typeof ScoreRenderer;
    RenderFinishedEventArgs: typeof RenderFinishedEventArgs;
    BarBounds: typeof BarBounds;
    BeatBounds: typeof BeatBounds;
    Bounds: typeof Bounds;
    BoundsLookup: typeof BoundsLookup;
    MasterBarBounds: typeof MasterBarBounds;
    NoteBounds: typeof NoteBounds;
    StaveGroupBounds: typeof StaveGroupBounds;
};
import { AlphaSynth } from '@src/synth/AlphaSynth';
import { PlaybackRange } from '@src/synth/PlaybackRange';
import { PlayerState } from '@src/synth/PlayerState';
import { PlayerStateChangedEventArgs } from '@src/synth/PlayerStateChangedEventArgs';
import { PositionChangedEventArgs } from '@src/synth/PositionChangedEventArgs';
import { AlphaSynthWebWorkerApi } from '@src/platform/javascript/AlphaSynthWebWorkerApi';
export declare const synth: {
    AlphaSynth: typeof AlphaSynth;
    PlaybackRange: typeof PlaybackRange;
    PlayerState: typeof PlayerState;
    PlayerStateChangedEventArgs: typeof PlayerStateChangedEventArgs;
    PositionChangedEventArgs: typeof PositionChangedEventArgs;
    AlphaSynthWebWorkerApi: typeof AlphaSynthWebWorkerApi;
};
